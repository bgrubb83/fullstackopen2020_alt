{"version":3,"sources":["components/PersonForm.js","components/Person.js","components/Persons.js","components/Filter.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["PersonForm","addPerson","newName","handleNewNameChange","newNumber","handleNewNumberChange","onSubmit","value","onChange","type","Person","person","deletePerson","key","name","number","onClick","event","Persons","persons","map","Filter","filter","handleFilterChange","Notification","notification","className","isError","text","baseUrl","axios","get","then","response","data","newObject","post","id","delete","status","put","App","useState","setPersons","setNewName","setNewNumber","setFilter","setNotification","useEffect","personService","personsToShow","length","toLowerCase","includes","target","preventDefault","existingPerson","find","window","confirm","newPerson","setTimeout","catch","error","p","concat","filteredPerson","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a272d6f.chunk.js","sourcesContent":["import React from 'react'\n\nconst PersonForm = ({ addPerson, newName, handleNewNameChange, newNumber, handleNewNumberChange }) => {\n  return (\n    <form onSubmit={addPerson}>\n      <h1>add a new</h1>\n      <div>\n        name: <input value={newName} onChange={handleNewNameChange} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={handleNewNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm;","import React from 'react';\n\nconst Person = ({ person, deletePerson }) => {\n  return (\n    <>\n      <p key={person.name}>{person.name} {person.number}</p>\n      <button onClick={(event) => deletePerson(event, person)}>delete</button>\n    </>\n  )\n}\n\nexport default Person;","import React from 'react';\nimport Person from './Person';\n\nconst Persons = ({ persons, deletePerson }) => {\n  return persons.map(person => {\n    return <Person person={person} key={person.name} deletePerson={deletePerson} />\n  }\n  )\n}\n\nexport default Persons;","import React from 'react';\n\nconst Filter = ({ filter, handleFilterChange }) => {\n  return (\n    <div>\n      filter shown with: <input value={filter} onChange={handleFilterChange} />\n    </div>\n  )\n}\n\nexport default Filter;","import React from 'react';\n\nconst Notification = ({ notification }) => {\n  if (notification === null) {\n    return null\n  }\n\n  return (\n    <div className={notification.isError ? \"error\" : \"notification\"}>\n      {notification.text}\n    </div>\n  )\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst deletePerson = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.status);\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n\n}\n\nexport default {\n  getAll,\n  create,\n  deletePerson,\n  update,\n}","import React, { useState, useEffect } from 'react';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport Filter from './components/Filter';\nimport Notification from './components/Notification';\nimport personService from './services/persons';\nimport './index.css';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [filter, setFilter] = useState('');\n  const [notification, setNotification] = useState(null);\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(response => {\n        setPersons(response)\n      })\n  }, [])\n\n  const handleNewNameChange = (event) => {\n    setNewName(event.target.value);\n  }\n\n  const handleNewNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value);\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    const existingPerson = persons.find(person => person.name === newName);\n\n    if (!existingPerson) {\n      const newPerson = { name: newName, number: newNumber };\n\n      personService\n        .create(newPerson)\n        .then(response => {\n          setPersons(persons.concat(response))\n          setNewName('');\n          setNewNumber('');\n          setNotification(\n            {\n              text: `Added ${newName}`,\n              isError: false,\n            }\n\n          )\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n\n        })\n    } else {\n      const confirmed = window.confirm(`${existingPerson.name} is already added to phonebook, replace the old number with a new one?`);\n      if (confirmed) {\n        const newPerson = { name: newName, number: newNumber };\n        personService.update(existingPerson.id, newPerson)\n          .then(response => {\n            setPersons((persons.map(person => person.id !== existingPerson.id ? person : { ...person, number: response.number })));\n            setNewName('');\n            setNewNumber('');\n            setNotification(\n              {\n                text: `${newName} updated`,\n                isError: false,\n              }\n\n            )\n            setTimeout(() => {\n              setNotification(null)\n            }, 5000)\n          })\n          .catch((error) => {\n            setPersons(persons.filter(p => p.id !== existingPerson.id))\n            setNotification(\n              {\n                text: `Information for ${newName} has already been removed from server`,\n                isError: true,\n              }\n\n            )\n            setTimeout(() => {\n              setNotification(null)\n            }, 5000)\n          })\n      }\n    }\n  }\n\n  const deletePerson = (event, person) => {\n    const confirmed = window.confirm(`Delete ${person.name}?`);\n    if (confirmed) {\n      personService.deletePerson(person.id)\n        .then(status => {\n          if (status === 204) {\n            setPersons(persons.filter(filteredPerson => filteredPerson.id !== person.id));\n          }\n        })\n    }\n  }\n\n  const personsToShow = filter.length > 0 ?\n    persons.filter((person) => {\n      return person.name.toLowerCase().includes(filter);\n    })\n    : persons;\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification\n        notification={notification}\n      />\n      <Filter filter={filter} handleFilterChange={handleFilterChange} />\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        handleNewNameChange={handleNewNameChange}\n        newNumber={newNumber}\n        handleNewNumberChange={handleNewNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons\n        persons={personsToShow}\n        deletePerson={deletePerson}\n      />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}